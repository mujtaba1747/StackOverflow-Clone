{"ast":null,"code":"import { AUTH_FORM_SUCCESS, AUTH_FORM_FAIL, AUTH_ERROR, USER_IS_LOADED, LOG_OUT, GET_USERS } from \"../Constants/auth.constants\"; //Initital state\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  users: [],\n  user: {},\n  errors: {},\n  isLoggedIn: false\n};\n\nconst auth = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case AUTH_FORM_SUCCESS:\n      // console.log(payload);\n      localStorage.setItem(\"token\", payload.Token);\n      return { ...state,\n        ...payload,\n        isLoggedIn: true,\n        errors: {}\n      };\n\n    case USER_IS_LOADED:\n      localStorage.getItem(\"token\");\n      console.log(\"User is loded\", payload);\n      return { ...state,\n        ...payload,\n        user: payload,\n        errors: {},\n        isLoggedIn: true\n      };\n\n    case AUTH_FORM_FAIL:\n    case AUTH_ERROR:\n    case LOG_OUT:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        ...payload,\n        errors: payload,\n        user: {},\n        isLoggedIn: false\n      };\n    // case CHANGE_PROFILE:\n    //   return {\n    //     ...state,\n    //     ...payload,\n    //     isLoggedIn: true,\n    //     isAllowedToChangePassword: false,\n    //     isPasswordChanged: false,\n    //     isLoading: false,\n    //     errors: null,\n    //   };\n    // case CHECK_PASSWORDS:\n    //   return {\n    //     ...state,\n    //     ...payload,\n    //     isAllowedToChangePassword: true,\n    //     errors: {},\n    //   };\n\n    case GET_USERS:\n      return { ...state,\n        users: [...payload],\n        isLoggedIn: true,\n        isAllowedToChangePassword: false,\n        isPasswordChanged: false,\n        isLoading: false,\n        errors: null\n      };\n    // case CHANGE_PASSWORD_FAIL:\n    // case CHANGE_USER_DATA_FAILED:\n    //   return {\n    //     ...state,\n    //     errors: payload,\n    //   };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/home/mujtaba/Desktop/SLI/QA-Forum/client/src/Reducers/authReducers.js"],"names":["AUTH_FORM_SUCCESS","AUTH_FORM_FAIL","AUTH_ERROR","USER_IS_LOADED","LOG_OUT","GET_USERS","initialState","token","localStorage","getItem","users","user","errors","isLoggedIn","auth","state","action","type","payload","setItem","Token","console","log","removeItem","isAllowedToChangePassword","isPasswordChanged","isLoading"],"mappings":"AAAA,SACEA,iBADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,cAJF,EAKEC,OALF,EAMEC,SANF,QAOO,6BAPP,C,CASA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,UAAU,EAAE;AALO,CAArB;;AAQA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC7C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKjB,iBAAL;AACE;AACAQ,MAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BD,OAAO,CAACE,KAAtC;AACA,aAAO,EACL,GAAGL,KADE;AAEL,WAAGG,OAFE;AAGLL,QAAAA,UAAU,EAAE,IAHP;AAILD,QAAAA,MAAM,EAAE;AAJH,OAAP;;AAOF,SAAKT,cAAL;AACEK,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,OAA7B;AACA,aAAO,EACL,GAAGH,KADE;AAEL,WAAGG,OAFE;AAGLP,QAAAA,IAAI,EAAEO,OAHD;AAILN,QAAAA,MAAM,EAAE,EAJH;AAKLC,QAAAA,UAAU,EAAE;AALP,OAAP;;AAQF,SAAKZ,cAAL;AACA,SAAKC,UAAL;AACA,SAAKE,OAAL;AACEI,MAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGR,KADE;AAEL,WAAGG,OAFE;AAGLN,QAAAA,MAAM,EAAEM,OAHH;AAILP,QAAAA,IAAI,EAAE,EAJD;AAKLE,QAAAA,UAAU,EAAE;AALP,OAAP;AAQF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKR,SAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,KAAK,EAAE,CAAC,GAAGQ,OAAJ,CAFF;AAGLL,QAAAA,UAAU,EAAE,IAHP;AAILW,QAAAA,yBAAyB,EAAE,KAJtB;AAKLC,QAAAA,iBAAiB,EAAE,KALd;AAMLC,QAAAA,SAAS,EAAE,KANN;AAOLd,QAAAA,MAAM,EAAE;AAPH,OAAP;AAUF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE,aAAOG,KAAP;AAvEJ;AAyED,CA5ED;;AA8EA,eAAeD,IAAf","sourcesContent":["import {\n  AUTH_FORM_SUCCESS,\n  AUTH_FORM_FAIL,\n  AUTH_ERROR,\n  USER_IS_LOADED,\n  LOG_OUT,\n  GET_USERS,\n} from \"../Constants/auth.constants\";\n\n//Initital state\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  users: [],\n  user: {},\n  errors: {},\n  isLoggedIn: false,\n};\n\nconst auth = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTH_FORM_SUCCESS:\n      // console.log(payload);\n      localStorage.setItem(\"token\", payload.Token);\n      return {\n        ...state,\n        ...payload,\n        isLoggedIn: true,\n        errors: {},\n      };\n\n    case USER_IS_LOADED:\n      localStorage.getItem(\"token\");\n      console.log(\"User is loded\", payload);\n      return {\n        ...state,\n        ...payload,\n        user: payload,\n        errors: {},\n        isLoggedIn: true,\n      };\n\n    case AUTH_FORM_FAIL:\n    case AUTH_ERROR:\n    case LOG_OUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        ...payload,\n        errors: payload,\n        user: {},\n        isLoggedIn: false,\n      };\n\n    // case CHANGE_PROFILE:\n    //   return {\n    //     ...state,\n    //     ...payload,\n    //     isLoggedIn: true,\n    //     isAllowedToChangePassword: false,\n    //     isPasswordChanged: false,\n    //     isLoading: false,\n    //     errors: null,\n    //   };\n    // case CHECK_PASSWORDS:\n    //   return {\n    //     ...state,\n    //     ...payload,\n    //     isAllowedToChangePassword: true,\n    //     errors: {},\n    //   };\n\n    case GET_USERS:\n      return {\n        ...state,\n        users: [...payload],\n        isLoggedIn: true,\n        isAllowedToChangePassword: false,\n        isPasswordChanged: false,\n        isLoading: false,\n        errors: null,\n      };\n\n    // case CHANGE_PASSWORD_FAIL:\n    // case CHANGE_USER_DATA_FAILED:\n    //   return {\n    //     ...state,\n    //     errors: payload,\n    //   };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}